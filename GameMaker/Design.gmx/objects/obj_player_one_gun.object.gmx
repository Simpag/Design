<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Holding Weapon Array
//Weapon Array
/*
[i,0] = Clip Size                           1
[i,1] = Ammo                                2
[i,2] = Current Clip                        3
[i,3] = Current Ammo                        4
[i,4] = Weapon number                       5
*/

numberOfHoldingWeaponInfo = 5; // !!!!! DONT FORGET TO INCREASE !!!!!!
numberOfHoldingWeapons = 2; // !!!!! DONT FORGET TO INCREASE !!!!!!

//Fill array to prevent crash
for (i = 0; i &lt; numberOfHoldingWeapons; i++) {
    for(j = 0; j &lt; numberOfHoldingWeaponInfo; j++) {
        holdingWeapon[i,j] = 0;   
    }
}

// [0] Primary/Starting (1)
holdingWeapon[0,0] = global.weaponArray[3,15];      //Clip Size 
holdingWeapon[0,1] = global.weaponArray[3,1];       //Ammo
holdingWeapon[0,2] = holdingWeapon[0,0];            //Current Clip
holdingWeapon[0,3] = holdingWeapon[0,1];            //Current Ammo
holdingWeapon[0,4] = 3;                             //Weapon number

// [1] empty (2)
holdingWeapon[1,0] = 0;                             //Clip Size 
holdingWeapon[1,1] = 0;                             //Ammo
holdingWeapon[1,2] = 0;                             //Current Clip
holdingWeapon[1,3] = 0;                             //Current Ammo
holdingWeapon[1,4] = 0;                             //Weapon number
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weapon = 0;
canShoot = true;
player = 1;                         //Used for scripts
secondaryEmpty = true;  

//Particles
scr_muzzleflash();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reload
if (holdingWeapon[weapon,3] &gt;= holdingWeapon[weapon,0]) {
    holdingWeapon[weapon,2] = holdingWeapon[weapon,0]; 
} else if (holdingWeapon[weapon,3] &gt; 0) {
    holdingWeapon[weapon,2] = holdingWeapon[weapon,3];
}

//Remove clip from ammo count
holdingWeapon[weapon,3] -= holdingWeapon[weapon,2] ;

canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rate of fire
canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_player_one.key_shoot &amp;&amp; canShoot &amp;&amp; holdingWeapon[weapon,2] &gt; 0) {
    scr_shoot(obj_player_one_bullet);
}

if (obj_player_one.key_reload &amp;&amp; holdingWeapon[weapon,3] &gt; 0) {
    scr_reload();
}

if (obj_player_one.key_switch) {
    if (secondaryEmpty == false) {
            if (weapon &lt; 1) {
                weapon++;
            } else {
                weapon = 0;
            }
            
            //Disable all alarms
            for (i = 0; i &lt; 2; i++) {
                alarm[i] = -1;
            }
            
            canShoot = true;
    }
}

scr_gun_rotation(obj_player_one);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = global.weaponArray[holdingWeapon[weapon,4], 8];
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
