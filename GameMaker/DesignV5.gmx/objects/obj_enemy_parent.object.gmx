<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_basic_zombie_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy variables
hp = 100;                           //His health
damage = 15;                        //How much damage he does
worth = 50;                         //How much money the player gets when he dies
changeRange = 3;                    //How close the player has to get before it changes target
target = scr_target_player();       //Select target 
hitBy = noone;                      //To know who hit him
animationSpeed = 13;                //Animation speed
attackRange = 0.5;                  //How far he can attack
canAttack = true;                   //If he can attack
isAttacking = false;                //If he is attacking
phy_fixed_rotation = true;
aiCont = instance_create(x,y,obj_enemy_parent_ai);
aiCont.parent = self;
aiAlg = "steering";

//Set state
state = basicStates.follow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(aiAlg) {
    case "steering":
        phy_rotation = -point_direction(x,y,target.x,target.y);
    break;
    
    case "path":
        phy_rotation = -aiCont.direction;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zombie Attack State
if (distance_to_object(target) &gt; attackRange + 0.01) state = basicStates.follow;
isAttacking = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zombie Attack Delay
if (distance_to_object(target) &lt; attackRange) scr_player_damage(scr_player_to_number(target), damage);
canAttack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy ai
if (global.freezeGame == false) {
    if (hitBy == noone) {
        scr_changeRange_player(); //If the other player gets to close it changes target. 
    } else {
        target = hitBy;
    }

    switch(state) {
        case basicStates.follow:
            scr_enemy_ai_follow();
            
            if (!alarm[2]) alarm[2] = 3;
            
            sprite_index = spr_basic_zombie_walk;
            animationSpeed = 13;
            
            if (distance_to_object(target) &lt; attackRange) state = basicStates.attack;
            
            break;
            
        case basicStates.attack:            
            scr_attack_normal(1, spr_basic_zombie_attack_right, spr_basic_zombie_attack_left, 1, 13, target); 
        break;
    
    }    
    
    image_speed = animationSpeed/room_speed;
} else {
    path_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != spr_basic_zombie_walk) {
    animationSpeed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.400000005960464</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.200000002980232</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>40,34.75</point>
    <point>32,40</point>
  </PhysicsShapePoints>
</object>
